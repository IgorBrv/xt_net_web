@* Страница чатов пользователя *@

@using Epam.CommonEntities
@using Epam.Interfaces.BLL
@using Epam.ASPNet.PL.Models
@using Epam.CommonLoggerInterface;

@{

    IEnumerable<Chat> chats = null;
    ILogger logger = CommonData.GetResolver().GetLogger;
    IMessagesBLL bloMessages = CommonData.GetResolver().GetBloMessages;

    Page.pageName = "Чаты";
    Layout = "/pages/_socialNetworkLayout.cshtml";

    if (CommonData.CurrentUser == null)
    {
        logger.Info("PL/chat: user null, redirecting to authpage");
        Response.Redirect("~/Pages/authPage.cshtml");
    }
    else if (CommonData.CurrentUser.blockedBy != null)
    {
        Response.Redirect("~/Pages/userPage.cshtml");
    }

    try
    {

        logger.Info("PL/chat: get user chats attempt");
        chats = bloMessages.GetAllChatsOfUser((int)CommonData.CurrentUser.id);
        chats = chats.OrderBy(item => item.abandoned);
    }
    catch (Exception e)
    {   // Перехват ошибок сгенерированных в bll (и случайных ошибок)

        CommonData.commonException = e;
        logger.Info("PL/chat: getting user chats failure");
        Response.Redirect("~/Pages/errorPage.cshtml");
    }
}

<link rel="stylesheet" href="/Pages/styles/cardbox.css">
<link rel="stylesheet" href="/Pages/styles/chats.css">

<div class="body-element-chats-container">
    @foreach (Chat chat in chats.Where(item => !item.abandoned))
    {
        Page.id = chat.id;
        Page.owner = false;
        Page.unreaded = null;
        Page.userEmblem = null;


        if (chat.unreaded != null && chat.unreaded == true)
        {
            Page.unreaded = "border: 2px solid DarkOrange;";
        }

        if (chat.members.Count(item => !item.hasLeavedChat) < 2)
        {
            Page.unreaded = "border: 2px solid Red;";
        }

        if (chat.emblem != null)
        {
            Page.userEmblem = $"background-image: url({chat.emblem})";
        }
        else if (chat.members.Count == 2)
        {
            string opponentEmblem = chat.members.Where(item => item.idMember != (int)CommonData.CurrentUser.id).FirstOrDefault().emblem;

            if (opponentEmblem.Length > 0)
            {
                Page.userEmblem = $"background-image: url({opponentEmblem})";
            }
        }

        if (CommonData.CurrentUser.id != null && chat.members.Count(item => item.idMember == (int)CommonData.CurrentUser.id && item.hasAdminRights == true) > 0)
        {
            Page.owner = true;
        }

        if (chat.members.Count < 3 && chat.title == null)
        {
            Page.chatName = $"Чат с {chat.members.Where(item => item.idMember != (int)CommonData.CurrentUser.id).FirstOrDefault().name}";
        }
        else if (chat.title == null)
        {
            Page.chatName = "Коллективный чат";
        }
        else
        {
            Page.chatName = chat.title;
        }

        if (chat.lastMessage != null)
        {
            Page.chatText = $"{chat.messageSenderName}: {chat.lastMessage}";
        }
        else
        {
            Page.chatText = $"Сообщение от {chat.messageSenderName}";
        }

        @RenderPage("/pages/_chatPartial.cshtml")
    }
</div>

@if (chats.Count(item => item.abandoned) > 0)
{
    <div class="body-element-leaved-container">
        <div class="body-element-divider">Покинутые чаты:</div>


        @foreach (Chat chat in chats.Where(item => item.abandoned))
        {
            Page.id = chat.id;
            Page.userEmblem = null;
            Page.chatLeaved = true;

            if (chat.emblem != null)
            {
                Page.userEmblem = $"background-image: url({chat.emblem})";
            }
            else if (chat.members.Count == 2)
            {
                string opponentEmblem = chat.members.Where(item => item.idMember != (int)CommonData.CurrentUser.id).FirstOrDefault().emblem;

                if (opponentEmblem.Length > 0)
                {
                    Page.userEmblem = $"background-image: url({opponentEmblem})";
                }
            }

            if (chat.members.Count < 3 && chat.title == null)
            {
                Page.chatName = $"Чат с {chat.members.Where(item => item.idMember != (int)CommonData.CurrentUser.id).FirstOrDefault().name}";
            }
            else if (chat.title == null)
            {
                Page.chatName = "Коллективный чат";
            }
            else
            {
                Page.chatName = chat.title;
            }

            if (chat.lastMessage != null)
            {
                Page.chatText = $"{chat.messageSenderName}: {chat.lastMessage}";
            }
            else
            {
                Page.chatText = $"Сообщение от {chat.messageSenderName}";
            }

            @RenderPage("/pages/_chatPartial.cshtml")
        }
    </div>
}
else
{
    <div class="body-element-leaved-container hidden">
        <div class="body-element-divider">Покинутые чаты:</div>
    </div>
}

<script src="/Pages/scripts/chatsPage.js"></script>

